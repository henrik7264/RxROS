<launch>
    <arg name="rvizconfig" default="$(find ros_robot/ros_robot.rviz" />
    <param name="robot_description" textfile="$(find ros_robot)/ros_robot.urdf"/>
    <!--param name="pub_map_odom_transform" value="true"/>
    <param name="map_frame" value="map" />
    <param name="base_frame" value="base_frame" />
    <param name="odom_frame" value="odom" /-->

    <group ns="base_parameters">
        <param name="r_wheel_joint" type="string" value="r_wheel_joint"/>
        <param name="l_wheel_joint" type="string" value="l_wheel_joint"/>
        <param name="wheel_radius" type="double" value="0.0325" /> <!-- diameter of wheel / 2 -->
        <param name="wheel_basis" type="double" value="0.0437" /> <!-- length between wheels / 2 -->
        <param name="vel_to_eff" type="double" value="0.5" /> <!-- used by nxt_base_controller to determine the effect of the motors -->
    </group>

    <!--node pkg="joystick" name="JoystickPublisher" type="joystickPublisher" output="screen" respawn="true"/-->

    <node pkg="nxt_teleop" name="nxt_teleop" type="nxt_teleop_node" output="screen">
      <param name="scale_linear" value="1.0" type="double"/>
      <param name="scale_angular" value="1.0" type="double"/>
    </node>

    <node pkg="ros_robot" name="RosRobot" type="rosRobot" output="screen" respawn="true"/>

    <node pkg="nxt_ros" name="nxt_ros" type="nxt_ros.py" output="screen" respawn="true">
      <rosparam command="load" file="$(find ros_robot)/ros_robot.yaml" />
      <!--param name="host" value="00:16:53:1A:0B:F5"/-->
    </node>

    <node pkg="robot_state_publisher" name="robot_state_publisher" type="robot_state_publisher">
        <param name="publish_frequency" value="2.0"/>
    </node>

    <node pkg="nxt_ros" name="joint_state_publisher"  type="joint_states_aggregator.py" output="screen" />

    <node pkg="nxt_controllers" name="nxt_base_controller" type="base_controller.py" output="screen"/>

    <node pkg="nxt_controllers" name="nxt_base_odometry" type="base_odometry.py" output="screen"/>

    <!--node pkg="tf" name="base_footprint_fixed_publisher" type="static_transform_publisher" args="0 0 0.07 0 0 0 1 base_footprint base_link 100"/-->

    <!--node pkg="robot_pose_ekf" name="robot_pose_ekf" type="robot_pose_ekf" respawn="true">
          <remap from="imu_data" to="gyro_imu" />
    </node-->

    <node name="map_server" pkg="map_server" type="map_server" args="$(find ros_robot)/map.yaml"/>

    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
        <rosparam command="load" file="$(find ros_robot)/costmap_common_params.yaml" ns="global_costmap" />
        <rosparam command="load" file="$(find ros_robot)/costmap_common_params.yaml" ns="local_costmap" />
        <rosparam command="load" file="$(find ros_robot)/local_costmap_params.yaml"/>
        <rosparam command="load" file="$(find ros_robot)/global_costmap_params.yaml"/>
        <rosparam command="load" file="$(find ros_robot)/base_local_planner_params.yaml"/>
    </node>

    <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" required="true" />
</launch>
